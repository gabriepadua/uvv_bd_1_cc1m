.-- Os scripts foram feitos no MYSQL, logo deve-se ser usado o código "use uvv;" para selecionar o banco de dados uvv, no qual contém todas as relações e 
dados que já foram inseridos anteriormente no PSet1


use uvv;



-- 1 COMANDO PARA SABER QUANTO É A MÉDIA SALARIAL DE CADA DEPARTAMENTO
select avg(funcionario.salario) as media_salario, departamento.nome_departamento 
from funcionario 
inner join departamento 
on departamento.numero_departamento = funcionario.numero_departamento 
group by departamento.nome_departamento;



-- 2 COMANDO PARA SABER A MÉDIA SALARIAL POR SEXO
select avg(funcionario.salario) as media_salario, funcionario.sexo
from funcionario
group by funcionario.sexo;

-- 3 COMANDO PARA TER O RELATORIO QUE LISTA O NOME DOS DEPARTAMENTOS E AS INFORMAÇÕES EM CADA 
select nome_departamento, concat(funcionario.primeiro_nome, ' ', funcionario.nome_meio, ' ', funcionario.ultimo_nome) as nome_completo, data_nascimento,
floor(DATEDIFF(CURDATE(),data_nascimento)/365.25) as idade, 
salario
from funcionario inner join departamento 
where funcionario.numero_departamento = departamento.numero_departamento order by nome_departamento;

-- 4 COMANDO PARA VER UM RELATÓRIO QUE MOSTRA INFORMAÇÕES DOS FUNCIONARIOS E O SALÁRIO COM UM REAJUSTE
select concat(funcionario.primeiro_nome, ' ', funcionario.nome_meio, ' ', funcionario.ultimo_nome) as nome_completo, floor(datediff(curdate(), data_nascimento)/365.25) as idade, 
salario, cast((salario*1.2) as decimal(10,2)) as salario_reajuste from funcionario 
where salario < 35000
union
select concat(funcionario.primeiro_nome, ' ', funcionario.nome_meio, ' ', funcionario.ultimo_nome) as nome, floor(datediff(curdate(), data_nascimento)/365.25) as idade, 
salario as salario, cast((salario*1.15) as decimal(10,2)) as salario_reajuste from funcionario 
where salario >= 35000;

-- 5 COMANDO PARA TER UM RELATÓRIO QUE LISTE PARA CADA DEPARTAMENTO O NOME DO GERENTE E DOS FUNCIONÁRIOS
select nome_departamento, a.primeiro_nome as gerente, funcionario.primeiro_nome, salario
from departamento inner join funcionario, 
(select primeiro_nome, cpf from funcionario inner join departamento where funcionario.cpf = departamento.cpf_gerente) as a
where departamento.numero_departamento = funcionario.numero_departamento and a.cpf = departamento.cpf_gerente 
order by departamento.nome_departamento asc, funcionario.salario desc;

-- 6 COMANDO PARA TER UM RELATÓRIO QUE MOSTRE O NOME COMPLETO DOS FUNCIONÁRIOS QUE TÊM DEPENDENTES
select concat(funcionario.primeiro_nome, ' ', funcionario.nome_meio, ' ', funcionario.ultimo_nome) as nome_completo, departamento.nome_departamento,
dependente.nome_dependente, floor(datediff(curdate(), dependente.data_nascimento)/365.25) as idade_dependente,
case when dependente.sexo = 'M' then 'Masculino' when dependente.sexo = 'm' then 'Masculino'
when dependente.sexo = 'F' then 'Feminino' when dependente.sexo = 'f' then 'Feminino' end as sexo_dependente
from funcionario 
inner join departamento on funcionario.numero_departamento = departamento.numero_departamento 
inner join dependente ON dependente.cpf_funcionario = funcionario.cpf;

-- 7 COMANDO PARA TER UM RELATÓRIO QUE MOSTRE ALGUMAS INFORMAÇÕES PARA CADA FUNCIONÁRIO QUE NÃO TEM  DEPENDENTE
select distinct concat(funcionario.primeiro_nome, ' ', funcionario.nome_meio, ' ', funcionario.ultimo_nome) as nome_completo, departamento.nome_departamento,
cast((funcionario.salario) as decimal(10,2)) as salario from funcionario
inner join departamento  inner join dependente 
where departamento.numero_departamento = funcionario.numero_departamento and
funcionario.cpf not in (select dependente.cpf_funcionario from dependente);


-- 8 COMANDO PARA TER UM RELATÓRIO QUE MOSTRE PARA CADA DEPARTAMENTO, OS PROJETOS DESSE DEPARTAMENTO E O NOME COMPLETO DOS FUNCIONARIOS
select departamento.nome_departamento, projeto.nome_projeto,
concat(funcionario.primeiro_nome, ' ', funcionario.nome_meio, ' ', funcionario.ultimo_nome) as nome_completo, trabalha_em.horas
from funcionario inner join departamento inner join projeto inner join trabalha_em
where departamento.numero_departamento = funcionario.numero_departamento and
projeto.numero_projeto = trabalha_em.numero_projeto and funcionario.cpf = trabalha_em.cpf_funcionario order by projeto.numero_projeto;
